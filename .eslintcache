[{"/home/anoop/Documents/Coding Tasks/100ms/src/index.js":"1","/home/anoop/Documents/Coding Tasks/100ms/src/App.js":"2","/home/anoop/Documents/Coding Tasks/100ms/src/components/ListCharacters.js":"3","/home/anoop/Documents/Coding Tasks/100ms/src/components/ListCharacter.js":"4","/home/anoop/Documents/Coding Tasks/100ms/src/components/Pagination.js":"5"},{"size":213,"mtime":1609133729852,"results":"6","hashOfConfig":"7"},{"size":4010,"mtime":1609169937898,"results":"8","hashOfConfig":"7"},{"size":1248,"mtime":1609167847607,"results":"9","hashOfConfig":"7"},{"size":1279,"mtime":1609167521662,"results":"10","hashOfConfig":"7"},{"size":689,"mtime":1609167728692,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"lax1qo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/home/anoop/Documents/Coding Tasks/100ms/src/index.js",[],["25","26"],"/home/anoop/Documents/Coding Tasks/100ms/src/App.js",[],"/home/anoop/Documents/Coding Tasks/100ms/src/components/ListCharacters.js",[],"/home/anoop/Documents/Coding Tasks/100ms/src/components/ListCharacter.js",["27"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ListCharacter({ character, quotes }) {\n\n    return (\n        <div className=\"container mt-5\">\n            <Link to={{ pathname: \"/\" }}>Go back</Link>\n\n            <div className=\"d-flex mt-3\">\n\n                <img src={character.img} alt=\"character image\" className=\"img-circle\" height=\"500\" />\n                {/*Listing character details*/}\n\n                <div className=\"ml-5\">\n\n                    <h1>{character.name}</h1>\n\n                    <p>Birthday: <b>{character.birthday}</b></p>\n\n                    <p>Occupation: <b>{character.occupation ? character.occupation[0] : null}</b> </p>\n\n                    <p>Status: <b>{character.status}</b></p>\n\n                    {character.status === \"alive\" ? <p>{character.nickname}</p> : null}\n\n                    <p>Actor: <b>{character.portrayed}</b></p>\n\n                    <p>Seasons: {character.appearance ? character.appearance.map((season) => (<span> {season} </span>)) : null}</p>\n\n                    <h4>Quotes</h4>\n\n                    <b>{quotes.map((quote) => (quote.author === character.name ? <p>{quote.quote}</p> : null))}</b>\n                </div>\n\n            </div>\n\n        </div >\n    )\n}\n\nexport default ListCharacter\n","/home/anoop/Documents/Coding Tasks/100ms/src/components/Pagination.js",["28"],"import React from 'react'\n\nfunction Pagination({ charactersPerPage, totalCharacters, paginate }) {\n\n    const pageNumber = [];\n\n    for (let i = 1; i < Math.ceil(totalCharacters / charactersPerPage); ++i) {\n        pageNumber.push(i);\n    }\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {\n                    pageNumber.map(number => (\n                        <li key={number} className=\"page-item\">\n                            <a href=\"#\" onClick={(e) => paginate(number, e)} className=\"page-link\">{number}</a>\n                        </li>\n                    ))\n                }\n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":12,"column":17,"nodeType":"35","endLine":12,"endColumn":102},{"ruleId":"36","severity":1,"message":"37","line":17,"column":29,"nodeType":"35","endLine":17,"endColumn":100},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]